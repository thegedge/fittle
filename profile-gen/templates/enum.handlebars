use crate::fields::FieldContent;
use serde::Serialize;

#[derive(Clone, Copy, Debug, Serialize)]
#[serde(rename_all = "snake_case")]
pub enum {{name}} {
{{~#sorted variants "name"}}
    {{name}},
{{~/sorted}}
    UnknownValue(u64),
}

impl From<FieldContent> for {{name}} {
    fn from(field: FieldContent) -> Self {
        if let FieldContent::{{base_type}}(enum_value) = field {
            match enum_value {
{{~#sorted variants "value"}}
                {{value}} => {{../name}}::{{name}},
{{~/sorted}}
                n => {{name}}::UnknownValue(n as u64),
            }
        } else {
          panic!("can't convert {{name}} to {:?}", field);
        }
    }
}
