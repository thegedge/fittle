use crate::fields::FieldContent;
use serde::Serialize;

#[derive(Clone, Copy, Debug, Serialize)]
#[serde(rename_all = "snake_case")]
pub enum DisplayPosition {
    AustrianGrid,
    BorneoRso,
    BritishGrid,
    Degree,
    DegreeMinute,
    DegreeMinuteSecond,
    DutchGrid,
    EstonianGrid,
    FinnishGrid,
    GermanGrid,
    HungarianGrid,
    IcelandicGrid,
    IndiaZone0,
    IndiaZoneIA,
    IndiaZoneIB,
    IndiaZoneIIA,
    IndiaZoneIIB,
    IndiaZoneIIIA,
    IndiaZoneIIIB,
    IndiaZoneIVA,
    IndiaZoneIVB,
    IndonesianEquatorial,
    IndonesianIrian,
    IndonesianSouthern,
    IrishGrid,
    IrishTransverse,
    LatvianGrid,
    Loran,
    MaidenheadGrid,
    MgrsGrid,
    ModifiedSwedishGrid,
    NewZealandGrid,
    NewZealandTransverse,
    QatarGrid,
    SouthAfricanGrid,
    SwedishGrid,
    SwedishRef99Grid,
    SwissGrid,
    TaiwanGrid,
    UnitedStatesGrid,
    UtmUpsGrid,
    WestMalayan,
    UnknownValue(u64),
}

impl From<FieldContent> for DisplayPosition {
    fn from(field: FieldContent) -> Self {
        if let FieldContent::Enum(enum_value) = field {
            match enum_value {
                0 => DisplayPosition::Degree,
                1 => DisplayPosition::DegreeMinute,
                2 => DisplayPosition::DegreeMinuteSecond,
                3 => DisplayPosition::AustrianGrid,
                4 => DisplayPosition::BritishGrid,
                5 => DisplayPosition::DutchGrid,
                6 => DisplayPosition::HungarianGrid,
                7 => DisplayPosition::FinnishGrid,
                8 => DisplayPosition::GermanGrid,
                9 => DisplayPosition::IcelandicGrid,
                10 => DisplayPosition::IndonesianEquatorial,
                11 => DisplayPosition::IndonesianIrian,
                12 => DisplayPosition::IndonesianSouthern,
                13 => DisplayPosition::IndiaZone0,
                14 => DisplayPosition::IndiaZoneIA,
                15 => DisplayPosition::IndiaZoneIB,
                16 => DisplayPosition::IndiaZoneIIA,
                17 => DisplayPosition::IndiaZoneIIB,
                18 => DisplayPosition::IndiaZoneIIIA,
                19 => DisplayPosition::IndiaZoneIIIB,
                20 => DisplayPosition::IndiaZoneIVA,
                21 => DisplayPosition::IndiaZoneIVB,
                22 => DisplayPosition::IrishTransverse,
                23 => DisplayPosition::IrishGrid,
                24 => DisplayPosition::Loran,
                25 => DisplayPosition::MaidenheadGrid,
                26 => DisplayPosition::MgrsGrid,
                27 => DisplayPosition::NewZealandGrid,
                28 => DisplayPosition::NewZealandTransverse,
                29 => DisplayPosition::QatarGrid,
                30 => DisplayPosition::ModifiedSwedishGrid,
                31 => DisplayPosition::SwedishGrid,
                32 => DisplayPosition::SouthAfricanGrid,
                33 => DisplayPosition::SwissGrid,
                34 => DisplayPosition::TaiwanGrid,
                35 => DisplayPosition::UnitedStatesGrid,
                36 => DisplayPosition::UtmUpsGrid,
                37 => DisplayPosition::WestMalayan,
                38 => DisplayPosition::BorneoRso,
                39 => DisplayPosition::EstonianGrid,
                40 => DisplayPosition::LatvianGrid,
                41 => DisplayPosition::SwedishRef99Grid,
                n => DisplayPosition::UnknownValue(n as u64),
            }
        } else {
          panic!("can't convert DisplayPosition to {:?}", field);
        }
    }
}
