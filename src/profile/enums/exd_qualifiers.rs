use crate::fields::FieldContent;
use serde::Serialize;

#[derive(Clone, Copy, Debug, Serialize)]
#[serde(rename_all = "snake_case")]
pub enum ExdQualifiers {
    Average,
    AverageLap,
    ComparedToVirtualPartner,
    Elapsed,
    EstimatedTotal,
    First,
    Instantaneous,
    Lap,
    LapPercentMaximum,
    LastLap,
    LastSport,
    Maximum,
    Maximum24H,
    MaximumAverage,
    MaximumLap,
    Minimum,
    Minimum24H,
    Moving,
    NextCoursePoint,
    NoQualifier,
    PercentMaximum,
    PercentMaximumAverage,
    Second,
    Shifter,
    Stopped,
    Sunrise,
    Sunset,
    TenSecondAverage,
    Third,
    ThirtySecondAverage,
    ThreeSecondAverage,
    ToDestination,
    ToGo,
    ToNext,
    Total,
    Zone1,
    Zone2,
    Zone3,
    Zone4,
    Zone5,
    Zone6,
    Zone7,
    Zone8,
    Zone9,
    UnknownValue(u64),
}

impl From<FieldContent> for ExdQualifiers {
    fn from(field: FieldContent) -> Self {
        if let FieldContent::Enum(enum_value) = field {
            match enum_value {
                0 => ExdQualifiers::NoQualifier,
                1 => ExdQualifiers::Instantaneous,
                2 => ExdQualifiers::Average,
                3 => ExdQualifiers::Lap,
                4 => ExdQualifiers::Maximum,
                5 => ExdQualifiers::MaximumAverage,
                6 => ExdQualifiers::MaximumLap,
                7 => ExdQualifiers::LastLap,
                8 => ExdQualifiers::AverageLap,
                9 => ExdQualifiers::ToDestination,
                10 => ExdQualifiers::ToGo,
                11 => ExdQualifiers::ToNext,
                12 => ExdQualifiers::NextCoursePoint,
                13 => ExdQualifiers::Total,
                14 => ExdQualifiers::ThreeSecondAverage,
                15 => ExdQualifiers::TenSecondAverage,
                16 => ExdQualifiers::ThirtySecondAverage,
                17 => ExdQualifiers::PercentMaximum,
                18 => ExdQualifiers::PercentMaximumAverage,
                19 => ExdQualifiers::LapPercentMaximum,
                20 => ExdQualifiers::Elapsed,
                21 => ExdQualifiers::Sunrise,
                22 => ExdQualifiers::Sunset,
                23 => ExdQualifiers::ComparedToVirtualPartner,
                24 => ExdQualifiers::Maximum24H,
                25 => ExdQualifiers::Minimum24H,
                26 => ExdQualifiers::Minimum,
                27 => ExdQualifiers::First,
                28 => ExdQualifiers::Second,
                29 => ExdQualifiers::Third,
                30 => ExdQualifiers::Shifter,
                31 => ExdQualifiers::LastSport,
                32 => ExdQualifiers::Moving,
                33 => ExdQualifiers::Stopped,
                34 => ExdQualifiers::EstimatedTotal,
                242 => ExdQualifiers::Zone9,
                243 => ExdQualifiers::Zone8,
                244 => ExdQualifiers::Zone7,
                245 => ExdQualifiers::Zone6,
                246 => ExdQualifiers::Zone5,
                247 => ExdQualifiers::Zone4,
                248 => ExdQualifiers::Zone3,
                249 => ExdQualifiers::Zone2,
                250 => ExdQualifiers::Zone1,
                n => ExdQualifiers::UnknownValue(n as u64),
            }
        } else {
          panic!("can't convert ExdQualifiers to {:?}", field);
        }
    }
}
